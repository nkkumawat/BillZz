/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package billzz.Lists;

import billzz.Model.PayHistory;
import billzz.Model.Payment;
import java.awt.Component;
import javax.swing.JList;
import javax.swing.ListCellRenderer;

/**
 *
 * @author sonu
 */
public class PayRecordHistoryPanel extends javax.swing.JPanel implements ListCellRenderer<PayHistory> {

    /**
     * Creates new form PayRecordHistoryPanel
     */
    public PayRecordHistoryPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        amountLabel = new javax.swing.JLabel();
        customerLabel = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        modeLabel = new javax.swing.JLabel();

        amountLabel.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        amountLabel.setText("Rs 120 /-");

        customerLabel.setText("from Narendra");

        dateLabel.setText("On Date");

        modeLabel.setText("mode");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(amountLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(modeLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(customerLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dateLabel)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(amountLabel)
                    .addComponent(modeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerLabel)
                    .addComponent(dateLabel))
                .addContainerGap(18, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel amountLabel;
    private javax.swing.JLabel customerLabel;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JLabel modeLabel;
    // End of variables declaration//GEN-END:variables
   public Component getListCellRendererComponent(JList<? extends PayHistory> list, PayHistory value, int index, boolean isSelected, boolean cellHasFocus) {
       
       
       this.amountLabel.setText("RS. : " +value.billAmount);
       this.dateLabel.setText("Date : " +value.billDate);
       this.modeLabel.setText("Mode : "+value.mode);
       this.customerLabel.setText("To : "+value.customer);
       this.setSize(20,5);
       if(isSelected){
         setBackground(list.getSelectionBackground());
         setForeground(list.getSelectionForeground());
       }
       else{
         setBackground(list.getBackground());
         setForeground(list.getForeground());
       }
       setEnabled(true);
       setFont(list.getFont());
       return this; 
    }

}
